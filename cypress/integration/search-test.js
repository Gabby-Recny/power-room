
describe('Search Bar', () => {
    beforeEach( () => {
         cy.visit('http://localhost:3000/')
    })
    it('Should have a search bar that only takes in numbers', () => {
        cy.get('[data-testid=search-bar]')
            .should('exist')
        cy.get('[data-testid=search-title]')
            .should('have.text', 'Find a Safe Restroom Near You')
        cy.get('[data-testid=search-input]')
            .should('have.attr', 'placeholder', 'Enter zip code')
        cy.get('[data-testid=search-button]')
            .contains('Search')
        })
    it('Should show input zip code when search button is clicked', () => {
         cy.get('[data-testid=search-input]')
            .type('90210')
            .should('have.value', '90210')
         cy.get('[data-testid=search-button]')
            .contains('Search')
            .click()
            .intercept('GET', 'https://api.zippopotam.us/us/90210', { zipcode: 90210 })
    })
    it('Should show error message and clear form if an incorrect zip code entered', () => {
        cy.get('[data-testid=search-input]')
            .type('21834092843')
            .should('have.value', '21834092843')
        cy.get('[data-testid=search-button]')
            .click()
        cy.get('[data-testid=error-message]')
            .should('have.text', `Please enter a United States five digit postal code.`)        
        cy.get('[data-testid=result-card]')
            .should('have.length', 0)
    })
    it('Should display loader when waiting for results to populate', () => {
        cy.get('[data-testid=search-input]')
            .type('90210')
            .should('have.value', '90210')
            cy.get('[data-testid=search-button]')
            .contains('Search')
            .click()
        cy.get('[data-testid=loader]').should('be.visible')
    })
    it('Should display appropriate error message when zip code is not found', () => {
        cy.get('[data-testid=search-input]')
        .type('99999')
        .should('have.value', '99999')
        cy.get('[data-testid=search-button]')
            .contains('Search')
            .click()
            .intercept('GET', 'https://api.zippopotam.us/us/99999', { zipcode: 99999 })
        cy.get('[data-testid=error-message]').should('be.visible')
    })
    it('Should should show bathroom results when button is clicked', () => {
        cy.get('[data-testid=search-input]')
            .type('90210')
            .should('have.value', '90210')
        cy.get('[data-testid=search-button]')
            .contains('Search')
            .click()
            .intercept('GET', 'https://api.zippopotam.us/us/90210', { fixture: '90210.json' })
            .intercept('GET', 'https://www.refugerestrooms.org/api/v1/restrooms/by_location?page=1&per_page=30&offset=0&lat=34.0901&lng=-118.4065', { fixture: 'LArestrooms.json' })
            .get('[data-testid=result-card]')
            .should('have.length', 5)
    })
    it.only('Should show gender neutral only bathrooms when applied', () => {
        cy.get('[data-testid=search-input]')
            .type('90210')
            .should('have.value', '90210')
        cy.get('[data-testid="checkbox"]')
            .click().should('be.checked')
        cy.get('[data-testid=search-button]').click()
            .intercept('GET', 'https://api.zippopotam.us/us/90210', { fixture: '90210.json' })
            .intercept('GET', 'https://www.refugerestrooms.org/api/v1/restrooms/by_location?page=1&per_page=30&offset=0&lat=34.0901&lng=-118.4065', { fixture: 'LArestrooms.json' })
            // .get('[data-testid=result-card]').should('have.length', 3)

    })
    it('Should have result cards with information', () => {
        cy.get('[data-testid=search-input]')
            .type('90210')
            .should('have.value', '90210')
        cy.get('[data-testid=search-button]')
            .contains('Search')
            .click()
            .intercept('GET', 'https://www.refugerestrooms.org/api/v1/restrooms/by_location?page=1&per_page=30&offset=0&lat=34.0901&lng=-118.4065', { fixture: 'LArestrooms.json' })
        cy.get('[data-testid=result-card]').first().should('be.visible')
        cy.get('[data-testid=address-info]').first().should('be.visible')
        cy.get('[data-testid=restroom-icons]').first().should('exist')
        cy.get('[data-testid=ratings]').first().should('be.visible')
        cy.get('[data-testid=directions]').first().should('exist')

    })
});